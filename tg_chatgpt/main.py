'''
TODO: –°–æ–∑–¥–∞—Ç—å –º–µ–Ω—é –¥–ª—è tg-–±–æ—Ç–∞, –æ–±–µ—Å–ø–µ—á–∏—Ç—å –Ω–∞–≤–∏–≥–∞—Ü–∏—é –ø–æ –º–µ–Ω—é (–ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–æ–∫ –±—É–¥—É—Ç –æ—Ç–∫—Ä—ã–≤–∞—Ç—å—Å—è –Ω—É–∂–Ω—ã–µ ReplyKeyboardMarkup
–†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å —Ñ—É–Ω–∫–∏—Ü—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∫–Ω–æ–ø–∫–∏ —Å—á–∏—Ç—ã–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –∏ –µ–≥–æ –∂–µ –≤—ã–≤–æ–¥–∏—Ç—å –≤ –∫–æ–Ω—Å–æ–ª—å –ø—Ä–∏–Ω—Ç–æ–º
* –ó–∞–ª–æ—á–∏—Ç—å (–ø—Ä–æ—Å—Ç–æ –µ–≥–æ –Ω–µ –≤–æ—Å–ø—Ä–∏–Ω–∏–º–∞–µ—à—å –∏ –Ω–∏–∫–∞–∫ –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—à—å) –æ–±—Ä–∞–±–æ—Ç–∫—É —Ç–µ–∫—Å—Ç–∞ –Ω–∞ –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è
* –î–æ–±–∞–≤–∏—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –ø–æ –∑–∞–ø—Ä–æ—Å—É, –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å —Å—á–∏—Ç—ã–≤–∞–Ω–∏–µ –∑–∞–ø—Ä–æ—Å–∞
'''

import logging
logging.basicConfig(level=logging.DEBUG)

from aiogram import Bot, Dispatcher, executor, types
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.types import CallbackQuery

import time

from config import TOKEN_API, HELP_INFO, likes_number, dislikes_number
from keyboard import *

bot = Bot(TOKEN_API)
dispatcher = Dispatcher(bot)


def on_startup():
    print('Bot has started')


@dispatcher.message_handler(commands=['start'])
async def start_command(message: types.Message):
    await message.answer(text='Hello!',
                         reply_markup=keyboard_menu)


@dispatcher.message_handler(commands=['help'])
async def start_command(message: types.Message):
    await message.answer(text=HELP_INFO,
                         reply_markup=keyboard_menu)


@dispatcher.message_handler(commands=['disable'])
async def start_command(message: types.Message):
    await message.answer(text='Keyboard is disabled',
                         reply_markup=ReplyKeyboardRemove())


@dispatcher.message_handler(commands=['photo'])
async def start_command(message: types.Message):
    keyboard_likes = InlineKeyboardMarkup(row_width=2)
    button_like = InlineKeyboardButton(text='‚ù§Ô∏è',
                                       callback_data='like')  # –û–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–π –ø–∞—Ä–∞–º–µ—Ç—Ä - url, callback_data
    button_dislike = InlineKeyboardButton(text='üí©',
                                          callback_data='dislike')

    keyboard_likes.add(button_like)
    keyboard_likes.insert(button_dislike)

    url = 'https://cataas.com/cat/says/Hi!'
    unique_url = f"{url}?timestamp={int(time.time())}"

    await message.answer_photo(photo=unique_url,
                               reply_markup=keyboard_menu)

    await message.answer(text='–û—Ü–µ–Ω–∏—Ç–µ —Ñ–æ—Ç–æ',
                         reply_markup=keyboard_likes)


@dispatcher.callback_query_handler()
async def count_likes(callback: types.CallbackQuery):
    global likes_number, dislikes_number

    print(callback.message)

    if callback.data == 'like':
        likes_number += 1

    if callback.data == 'dislike':
        dislikes_number += 1


@dispatcher.message_handler(commands=['likes'])
async def start_command(message: types.Message):
    await message.answer(text=f'Likes:{likes_number}, Dislikes:{dislikes_number}',
                         reply_markup=keyboard_menu)

def main():
    executor.start_polling(dispatcher,
                           skip_updates=True,
                           on_startup=on_startup())


if __name__ == '__main__':
    main()
